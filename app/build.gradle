apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mm.sdkdemo"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 4011
        versionName "2.2.5"
        multiDexEnabled true

        /**
         * 应用只支持中文
         */
        resConfigs "zh"

        //启用vector支持 gradle 2.0及以上版本
        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi-v7a", "armeabi"
        }
    }
    signingConfigs {
        release {
            storeFile file("demo.keystore")
            storePassword "momo1234"
            keyAlias "momo_sdk"
            keyPassword "momo1234"
            v2SigningEnabled true
            v1SigningEnabled true
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'rifle.plugin'
rifleConfig {
    appId = "9dac61837c9bc9eba14f8a32584bde1f"          // 管理后台申请的应用APPID
    appKey = "5cf82fbd40e4e983e2ce43793e86f7ef"         // 管理后台申请的应用APPKEY
    versionName = android.defaultConfig.versionName
    // enable = true                      // 打开/关闭插件（默认为true）
    // symbolsDir = "src/main/obj"        // 带符号表SO文件所在目录（默认为"src/main/obj"）
    // enableSymbolsUpload = true         // 打开/关闭提交带符号表SO的功能（默认为true）
    // waitingSymbolsUpload = true      // 打包完成后需要确认符号表文件是否提交完成，未完成需要等待提交完成。默认true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation "com.android.support:design:28.0.0"


    api 'com.cosmos.rifle:core:1.8.2'
    api 'com.cosmos.rifle:native:1.1.1'
    api "com.cosmos.radar:core:2.5.7"
    if (gradle.useLocalUI) {
        implementation project(':record_ui_sdk')
        implementation project(':player_business')
    } else {
        api "com.cosmos.mediax:$RECORDER_UISDK_ARTIFACT_ID:$JCENTER_RECORDER_UI_SDK_VERSION_NAME"
        api "com.cosmos.mediax:$PLAYER_UI_ARTIFACT_ID:$JCENTER_PLAYER_UI_VERSION_NAME"
    }

//    implementation 'com.tencent.bugly:crashreport:latest.release'
//    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
//    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    provided 'com.cosmos.baseutil:androidInjectorCore:1.0.0'
//    compile project(path: ':imagecrop')
    implementation 'com.cosmos.baseutil:androidPerformanceEmpty:1.0.0'

}
